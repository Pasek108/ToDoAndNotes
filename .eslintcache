[{"D:\\Języki\\React\\Test\\app\\src\\index.js":"1","D:\\Języki\\React\\Test\\app\\src\\App.js":"2","D:\\Języki\\React\\Test\\app\\src\\reportWebVitals.js":"3","D:\\Języki\\React\\Test\\app\\src\\services\\UserService.js":"4","D:\\Języki\\React\\Test\\app\\src\\components\\Notes.js":"5","D:\\Języki\\React\\Test\\app\\src\\components\\ToDo.js":"6","D:\\Języki\\React\\Test\\app\\src\\components\\Categories.js":"7","D:\\Języki\\React\\Test\\app\\src\\components\\CategoriesEdit.js":"8","D:\\Języki\\React\\Test\\app\\src\\components\\NoNotesHere.js":"9","D:\\Języki\\React\\Test\\app\\src\\components\\NotesListElement.js":"10","D:\\Języki\\React\\Test\\app\\src\\components\\OpenNote.js":"11","D:\\Języki\\React\\Test\\app\\src\\components\\CategoriesListElement.js":"12","D:\\Języki\\React\\Test\\app\\src\\components\\ToDoCategories.js":"13","D:\\Języki\\React\\Test\\app\\src\\components\\TaskList.js":"14","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\getCategories.js":"15","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\updateNoteCategories.js":"16","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\getNotes.js":"17","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\backupNote.js":"18","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\deleteNote.js":"19","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\saveNote.js":"20","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\sendCategories.js":"21","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\formatBBCode.js":"22","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\helperFunctions.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":2075,"mtime":1613928294006,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":7203,"mtime":1614358108992,"results":"28","hashOfConfig":"25"},{"size":6342,"mtime":1614256557532,"results":"29","hashOfConfig":"25"},{"size":625,"mtime":1614016371857,"results":"30","hashOfConfig":"25"},{"size":3072,"mtime":1613577819812,"results":"31","hashOfConfig":"25"},{"size":6114,"mtime":1614248627042,"results":"32","hashOfConfig":"25"},{"size":516,"mtime":1613052446304,"results":"33","hashOfConfig":"25"},{"size":7051,"mtime":1614248744924,"results":"34","hashOfConfig":"25"},{"size":9050,"mtime":1614248652834,"results":"35","hashOfConfig":"25"},{"size":2362,"mtime":1613298979525,"results":"36","hashOfConfig":"25"},{"size":6676,"mtime":1614265515252,"results":"37","hashOfConfig":"25"},{"size":13161,"mtime":1614367493259,"results":"38","hashOfConfig":"25"},{"size":1141,"mtime":1614251194448,"results":"39","hashOfConfig":"25"},{"size":1486,"mtime":1614254682530,"results":"40","hashOfConfig":"25"},{"size":2426,"mtime":1614254412034,"results":"41","hashOfConfig":"25"},{"size":735,"mtime":1614255001610,"results":"42","hashOfConfig":"25"},{"size":1863,"mtime":1614255397466,"results":"43","hashOfConfig":"25"},{"size":1004,"mtime":1614254914375,"results":"44","hashOfConfig":"25"},{"size":3493,"mtime":1614254993276,"results":"45","hashOfConfig":"25"},{"size":1524,"mtime":1614255897972,"results":"46","hashOfConfig":"25"},{"size":1077,"mtime":1614252429484,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1p6xgk4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Języki\\React\\Test\\app\\src\\index.js",[],["97","98"],"D:\\Języki\\React\\Test\\app\\src\\App.js",[],"D:\\Języki\\React\\Test\\app\\src\\reportWebVitals.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\UserService.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\Notes.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\ToDo.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\Categories.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\CategoriesEdit.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\NoNotesHere.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\NotesListElement.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\OpenNote.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\CategoriesListElement.js",[],"D:\\Języki\\React\\Test\\app\\src\\components\\ToDoCategories.js",["99","100"],"import React, { useState } from 'react';\r\nimport { Icon, Item, Divider, Modal, Button, Header } from 'semantic-ui-react';\r\nimport { getToDoLists, deleteUserList } from '../services/UserService';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nfunction MenuItem(props) {\r\n    const [isMouseOver, setMouseOverFlag] = useState(0);\r\n    const activeMenuStyle = (props.active) ? { backgroundColor: \"white\", fontWeight: \"bold\", color: \"black\" } : {};\r\n\r\n    return (\r\n        <Item\r\n            className=\"todo-menu-item menu-item cursor-pointer\"\r\n            style={activeMenuStyle}\r\n            onClick={props.onClick}\r\n            onMouseEnter={() => { if (props.icon === \"circle\") setMouseOverFlag(true) }}\r\n            onMouseLeave={() => { if (props.icon === \"circle\") setMouseOverFlag(false) }}\r\n        >\r\n            <Icon name={props.icon} style={{ color: props.color }} /> {props.name}\r\n            <div className=\"to-do-category-animation-underline\" style={(props.active) ? { width: \"100%\" } : {}} />\r\n            {(isMouseOver)\r\n                ? (\r\n                    <Icon name=\"delete\" color=\"red\"\r\n                        style={{ float: \"right\", position: \"static\" }}\r\n                        onClick={(e) => { deleteUserList(props.id); e.stopPropagation(); props.refresh(props.id) }} />\r\n                )\r\n                : (\"\")\r\n            }\r\n        </Item>\r\n    );\r\n}\r\n\r\nfunction NewList(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"color-pick-button\">\r\n                <Icon name=\"circle\" style={{ color: \"#000000\", float: \"left\" }} /> Kolor\r\n            </div>\r\n\r\n            <input type=\"text\" className=\"new-task\" placeholder=\"Nazwa nowej listy\" style={{ width: \"78%\" }} />\r\n\r\n            <div className=\"remove-new-list-button\">\r\n                <Icon name=\"delete\" color=\"red\" size=\"large\" style={{ marginRight: 0 }} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddListsModal(props) {\r\n    const defaultColors = [\r\n        '#DB2828',\r\n        '#F2711C',\r\n        '#FBBD08',\r\n        '#B5CC18',\r\n        '#21BA45',\r\n        '#00B5AD',\r\n        '#2185D0',\r\n        '#6435C9',\r\n        '#A333C8',\r\n        '#E03997',\r\n        '#A5673F',\r\n        '#767676',\r\n        '#1B1C1D'\r\n    ]\r\n\r\n    let newLists = [];\r\n    newLists.push(<NewList />);\r\n\r\n    return (\r\n        <Modal\r\n            onClose={props.onClose}\r\n            onOpen={props.onOpen}\r\n            open={props.open}\r\n            size='small'\r\n        >\r\n            <Header icon>\r\n                Dodaj nową liste\r\n            </Header>\r\n            <Modal.Content>\r\n                {newLists}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button basic color='red' icon=\"remove\" content=\"Anuluj\" onClick={props.onClose} />\r\n                <Button color='green' icon=\"checkmark\" content=\"Dodaj\" onClick={props.onClose} />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default class ToDoCategories extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu: [],\r\n            active: props.active,\r\n            newListColor: \"#000000\",\r\n            userListsCount: 0,\r\n            addListOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const menuItems = [\r\n            { icon: \"calendar outline\", color: \"#21BA45\", name: \"Dzisiaj\" },\r\n            { icon: \"calendar alternate outline\", color: \"#6435C9\", name: \"Następne 7 dni\" },\r\n            { icon: \"warning\", color: \"#DB2828\", name: \"Ważne\" },\r\n            { icon: \"alarm\", color: \"#1B1C1D\", name: \"Zaległe\" },\r\n            { icon: \"archive\", color: \"#767676\", name: \"Archiwum\" }\r\n        ];\r\n\r\n        const userMenuItems = getToDoLists();\r\n\r\n        let menu = [];\r\n        let userMenuItemLength = userMenuItems.length;\r\n        this.setState({ userListsCount: userMenuItemLength });\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            menu.push(\r\n                <MenuItem key={menuItems[i].name}\r\n                    active={this.state.active === i}\r\n                    icon={menuItems[i].icon}\r\n                    color={menuItems[i].color}\r\n                    name={menuItems[i].name}\r\n                    onClick={() => {\r\n                        this.setState({ active: i }, this.componentDidMount)\r\n                        this.props.changeCategory(i);\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        menu.push(<Divider key={\"1\"} />);\r\n        menu.push(\r\n            <h4 style={{ marginTop: 0 }} key=\"2\">\r\n                Listy zadań ({userMenuItemLength}/8)\r\n                <Icon name=\"plus\" color=\"green\" className=\"float-right cursor-pointer\" onClick={() => this.setState({ addListOpen: true })} />\r\n            </h4>\r\n        )\r\n\r\n        for (let i = 0; i < userMenuItemLength; i++) {\r\n            menu.push(\r\n                <MenuItem key={userMenuItems[i].name}\r\n                    active={this.state.active === i + 4}\r\n                    icon=\"circle\"\r\n                    id={userMenuItems[i].id}\r\n                    color={userMenuItems[i].color}\r\n                    name={userMenuItems[i].name}\r\n                    onClick={() => {\r\n                        this.setState({ active: i + 4 }, this.componentDidMount);\r\n                        this.props.changeCategory(i + 4);\r\n                    }}\r\n                    refresh={(id) => {\r\n                        if (this.state.active === id) this.setState({ active: 0 }, this.componentDidMount);\r\n                        else if (this.state.active < id) this.componentDidMount();\r\n                        else if (this.state.active > id) this.setState({ active: id - 1 + (this.state.active - id) }, this.componentDidMount);\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        menu.push(<Divider key=\"3\" />);\r\n        menu.push(\r\n            <MenuItem key={menuItems[4].name}\r\n                active={this.state.active === 12}\r\n                icon={menuItems[4].icon}\r\n                color={menuItems[4].color}\r\n                name={menuItems[4].name}\r\n                onClick={() => {\r\n                    this.setState({ active: 12 }, this.componentDidMount);\r\n                    this.props.changeCategory(12);\r\n                }}\r\n            />\r\n        );\r\n\r\n        this.setState({ menu: menu });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                {this.state.menu}\r\n                <AddListsModal open={this.state.addListOpen} onClose={() => this.setState({ addListOpen: false })} onOpen={() => this.setState({ addListOpen: true })} />\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Języki\\React\\Test\\app\\src\\components\\TaskList.js",["101","102","103","104","105"],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\getCategories.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\updateNoteCategories.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\getNotes.js",["106"],"import { isLocalStorageItemSet, getLocalStorageCounter, getCategory, getLocalStorageItem } from './helperFunctions';\r\n\r\nexport default function getNotes() {\r\n    if (!isLocalStorageItemSet(\"countNotes\")) localStorage.setItem(\"countNotes\", \"0\");\r\n\r\n    let categories = [];\r\n    const categoriesCount = getLocalStorageCounter(\"countCategories\");\r\n\r\n    for (let i = 1; i <= categoriesCount; i++) {\r\n        categories.push(getCategory(`category${i}`, { id: true, name: true, color: false }))\r\n    }\r\n\r\n    let notes = [];\r\n    const notesCount = getLocalStorageCounter(\"countNotes\");\r\n\r\n    for (let i = 1; i <= notesCount; i++) {\r\n        const note = getLocalStorageItem(`note${i}`);\r\n        notes.push(\r\n            {\r\n                id: parseInt(note[0]),\r\n                title: decodeURIComponent(note[1]),\r\n                category: note[2].split(\"/\").map((id) => {\r\n                    for (let j = 0; j < categories.length; j++) {\r\n                        if (parseInt(id) === categories[j].id) {\r\n                            return decodeURIComponent(categories[j].name);\r\n                        }\r\n                    }\r\n                }),\r\n                align: note[3],\r\n                note: decodeURIComponent(note[4]),\r\n                timestamp: new Date(parseInt(note[5])).getTime()\r\n            }\r\n        )\r\n\r\n        const dateTimestamp = new Date(notes[i - 1].timestamp);\r\n        const dateAndTime = {\r\n            seconds: dateTimestamp.getSeconds().toString().padStart(2, \"0\"),\r\n            minutes: dateTimestamp.getMinutes().toString().padStart(2, \"0\"),\r\n            hours: dateTimestamp.getHours().toString().padStart(2, \"0\"),\r\n            day: dateTimestamp.getDate().toString().padStart(2, \"0\"),\r\n            month: (dateTimestamp.getMonth() + 1).toString().padStart(2, \"0\"),\r\n            year: dateTimestamp.getFullYear().toString().padStart(2, \"0\")\r\n        }\r\n        notes[i - 1].date = `${dateAndTime.day}-${dateAndTime.month}-${dateAndTime.year}`;\r\n        notes[i - 1].time = `${dateAndTime.hours}:${dateAndTime.minutes}:${dateAndTime.seconds}`;\r\n\r\n        if (notes.length > 0) {\r\n            for (let j = notes.length - 1; j > 0; j--) {\r\n                if (notes[j].timestamp > notes[j - 1].timestamp) {\r\n                    [notes[j], notes[j - 1]] = [notes[j - 1], notes[j]];\r\n                }\r\n                else break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return notes;\r\n}","D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\backupNote.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\deleteNote.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\saveNote.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\sendCategories.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\formatBBCode.js",[],"D:\\Języki\\React\\Test\\app\\src\\services\\Notes\\helperFunctions.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":22},{"ruleId":"111","severity":1,"message":"115","line":49,"column":11,"nodeType":"113","messageId":"114","endLine":49,"endColumn":24},{"ruleId":"116","severity":1,"message":"117","line":56,"column":47,"nodeType":"118","messageId":"119","endLine":56,"endColumn":49},{"ruleId":"116","severity":1,"message":"117","line":226,"column":42,"nodeType":"118","messageId":"119","endLine":226,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":308,"column":65,"nodeType":"118","messageId":"119","endLine":308,"endColumn":67},{"ruleId":"116","severity":1,"message":"117","line":317,"column":65,"nodeType":"118","messageId":"119","endLine":317,"endColumn":67},{"ruleId":"116","severity":1,"message":"117","line":330,"column":57,"nodeType":"118","messageId":"119","endLine":330,"endColumn":59},{"ruleId":"116","severity":1,"message":"117","line":22,"column":55,"nodeType":"118","messageId":"119","endLine":22,"endColumn":57},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'SketchPicker' is defined but never used.","Identifier","unusedVar","'defaultColors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]